<?php
/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

/**
 * Implements hook_preprocess_HOOK() for block templates.
 */
function durhamtech_preprocess_block(&$variables) {
  switch ($variables['base_plugin_id']) {
    case 'system_branding_block':
      $variables['site_logo'] = '';
      if ($variables['content']['site_logo']['#access'] && $variables['content']['site_logo']['#uri']) {
        $variables['site_logo'] = str_replace('.svg', '.png', $variables['content']['site_logo']['#uri']);
      }
      break;

  }
}

/**
 * Implements hook_preprocess_page().
 */
function durhamtech_preprocess_page(&$variables) {

  // Gets a media image - currently hardcoded to media id 1.
  $entity = \Drupal::entityTypeManager()->getStorage("media")->load(1);
  if(isset($entity)) {
    // Add page template variable with uri of media item.
    $variables['banner_img'] = $entity->field_banner_image->entity->getFileUri();
  }

  //kint($variables);
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function durhamtech_theme_suggestions_page_alter(array &$suggestions, array $variables) {

  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $content_type = $node->bundle();
    $suggestions[] = 'page__'.$content_type;
  } else if ($taxonomy = \Drupal::routeMatch()->getParameter('taxonomy_term')) {
    $taxonomy_type = $taxonomy->bundle();
    $suggestions[] = 'page__'.$taxonomy_type;
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 * @param array $suggestions
 * @param array $variables
 */
function durhamtech_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  // Block suggestions for custom block bundles.
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__bundle__' . $variables['elements']['content']['#block_content']->bundle());
  }
}